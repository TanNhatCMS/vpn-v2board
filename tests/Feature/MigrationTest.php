<?php

namespace Tests\Feature;

use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Schema;
use PHPUnit\Framework\Attributes\Test;
use Tests\TestCase;

class MigrationTest extends TestCase
{
    use RefreshDatabase;
    // delete all tables before running tests
    protected bool $dropTables = true;

    #[Test]
    public function users_table_has_expected_columns()
    {
        $this->assertTrue(
            Schema::hasColumns('users', [
                'id', 'invite_user_id', 'telegram_id', 'email', 'password',
                'password_algo', 'password_salt', 'balance', 'discount',
                'commission_type', 'commission_rate', 'commission_balance',
                't', 'u', 'd', 'transfer_enable', 'banned', 'is_admin',
                'last_login_at', 'is_staff', 'last_login_ip', 'uuid',
                'group_id', 'plan_id', 'speed_limit', 'remind_expire',
                'remind_traffic', 'token', 'expired_at', 'remarks',
                'created_at', 'updated_at',
            ]),
            'The users table does not have expected columns'
        );
    }

    #[Test]
    public function check_all_tables_and_columns()
    {
        $tables = [
            'server_group' => ['id', 'name', 'created_at', 'updated_at'],
            'server_hysteria' => ['id', 'group_id', 'route_id', 'name', 'parent_id', 'host', 'port', 'server_port', 'tags', 'rate', 'show', 'sort', 'up_mbps', 'down_mbps', 'server_name', 'created_at', 'updated_at'],
            'server_route' => ['id', 'remarks', 'match', 'action', 'action_value', 'created_at', 'updated_at'],
            'server_shadowsocks' => ['id',
                'group_id',
                'route_id',
                'parent_id',
                'tags',
                'name',
                'rate',
                'host',
                'port',
                'server_port',
                'cipher',
                'obfs',
                'obfs_settings',
                'show',
                'sort',
                'created_at', 'updated_at'],
            'server_trojan' => ['id',
                'group_id',
                'route_id',
                'parent_id',
                'tags',
                'name',
                'rate',
                'host',
                'port',
                'server_port',
                'allow_insecure',
                'server_name',
                'show',
                'sort',
                'created_at', 'updated_at'],
            'server_vmess' => ['id',
                'group_id',
                'route_id',
                'name',
                'parent_id',
                'host',
                'port',
                'server_port',
                'tls',
                'tags',
                'rate',
                'network',
                'rules',
                'networkSettings',
                'tlsSettings',
                'ruleSettings',
                'dnsSettings',
                'show',
                'sort',
                'created_at', 'updated_at'],
            'tickets' => ['id',
                'user_id', 'subject',
                'level',
                'status',
                'reply_status',
                'created_at', 'updated_at',
            ],
            'ticket_message' => ['id',
                'user_id',
                'ticket_id',
                'message',
                'created_at', 'updated_at',
            ],
            'coupon' => ['id', 'code',
                'name',
                'type',
                'value',
                'show',
                'limit_use',
                'limit_use_with_user',
                'limit_plan_ids',
                'limit_period',
                'started_at',
                'ended_at',
                'created_at', 'updated_at'],
            'commission_log' => ['id', 'user_id',
                'invite_user_id',
                'trade_no',
                'order_amount',
                'get_amount',
                'created_at', 'updated_at'],
            'stat' => ['id',
                'record_at',
                'record_type',
                'order_count',
                'order_total',
                'commission_count',
                'commission_total',
                'paid_count',
                'paid_total',
                'register_count',
                'invite_count',
                'transfer_used_total',
                'created_at', 'updated_at'],
            'stat_user' => ['id', 'user_id',
                'server_rate',
                'u',
                'd',
                'record_type',
                'record_at',
                'created_at', 'updated_at'],
            'stat_server' => ['id', 'server_id',
                'server_type',
                'u',
                'd',
                'record_type',
                'record_at',
                'created_at', 'updated_at'],
            'invite_code' => ['id',
                'user_id',
                'code',
                'status',
                'pv',
                'created_at', 'updated_at'],
            'knowledge' => ['id',
                'language',
                'category',
                'title',
                'body',
                'sort',
                'show',
                'created_at', 'updated_at'],
            'log' => ['id',
                'title',
                'level',
                'host',
                'uri',
                'method',
                'data',
                'ip',
                'context',
                'created_at', 'updated_at'],
            'mail_log' => ['id',
                'email',
                'subject',
                'template_name',
                'error',
                'created_at', 'updated_at'],
            'notice' => ['id',
                'title',
                'content',
                'show',
                'img_url',
                'tags',
                'created_at', 'updated_at'],
            'payment' => ['id',
                'uuid',
                'payment',
                'name',
                'icon',
                'config',
                'notify_domain',
                'handling_fee_fixed',
                'handling_fee_percent',
                'enable',
                'sort',
                'created_at', 'updated_at'],
            'plan' => ['id',
                'group_id',
                'transfer_enable',
                'name',
                'speed_limit',
                'show',
                'sort',
                'renew',
                'content',
                'month_price',
                'quarter_price',
                'half_year_price',
                'year_price',
                'two_year_price',
                'three_year_price',
                'onetime_price',
                'reset_price',
                'reset_traffic_method',
                'capacity_limit',
                'created_at', 'updated_at'],
            'orders' => ['id',
                'invite_user_id',
                'user_id',
                'plan_id',
                'coupon_id',
                'payment_id',
                'type',
                'period',
                'trade_no',
                'callback_no',
                'total_amount',
                'handling_amount',
                'discount_amount',
                'surplus_amount',
                'refund_amount',
                'balance_amount',
                'surplus_order_ids',
                'status',
                'commission_status',
                'commission_balance',
                'actual_commission_balance',
                'paid_at',
                'created_at', 'updated_at'],
        ];

        foreach ($tables as $table => $columns) {
            $this->assertTrue(Schema::hasTable($table), "Table '$table' does not exist.");

            foreach ($columns as $column) {
                $this->assertTrue(
                    Schema::hasColumn($table, $column),
                    "Column '$column' does not exist in table '$table'."
                );
            }
        }
    }
}
